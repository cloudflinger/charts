# Default values for openvpn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

updateStrategy: {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0

exporter:
  enabled: true
  image:
    repository: gcr.io/cloudflinger-com-prod/openvpn-exporter
    tag: 1.0.1
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 300m
      memory: 128Mi
    requests:
      cpu: 300m
      memory: 128Mi

image:
  repository: jhgaylor/openvpn-ldap
  tag: 1.0.4
  pullPolicy: IfNotPresent
service:
  type: LoadBalancer
  externalPort: 443
  internalPort: 443
  externalIPs: []
  # LoadBalancerSourceRanges: 0.0.0.0/0
  # loadBalancerIP: 10.0.0.1

  ## Here annotations can be added to the openvpn service
  # annotations:
  #   external-dns.alpha.kubernetes.io/hostname: vpn.example.com
  annotations: {}

resources:
  limits:
    cpu: 300m
    memory: 128Mi
  requests:
    cpu: 300m
    memory: 128Mi

persistence:
  enabled: true
  # subPath: openvpn
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## openvpn data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 2M
openvpn:
  ldap:
    enabled: true
    url: "ldap://ldap"
    baseDN: "ou=People,dc=example,dc=com"
    searchFilter: "(sAMAccountName=%u)"
    bindCredsSecretName: "openvpn-ldap-bind-creds"
  certsSecretName: "openvpn-certs"
  # Network allocated for openvpn clients (default: 10.240.0.0).
  OVPN_NETWORK: 10.240.0.0
  # Network subnet allocated for openvpn client (default: 255.255.0.0).
  OVPN_SUBNET: 255.255.0.0
  # Protocol used by openvpn tcp or udp (default: udp).
  OVPN_PROTO: tcp
  # DNS name to embed in the generated openvpn config
  OVPN_DNS_NAME: vpn.example.com
  # Kubernetes cluster ip network (optional). Gives access to cluster ips directly
  OVPN_K8S_CLUSTER_IP_NETWORK: "172.20.0.0"
  # Kubernetes cluster ip subnet (optional). Gives access to cluster ips directly
  OVPN_K8S_CLUSTER_IP_SUBNET: "255.255.0.0"
  # Kubernetes pod network (optional).
  OVPN_K8S_POD_NETWORK: "10.2.0.0"
  # Kubernetes pod network subnet (optional).
  OVPN_K8S_POD_SUBNET: "255.255.0.0"
  # Kubernetes node ip network (optional)
  OVPN_K8S_NODE_NETWORK: "10.1.0.0"
  # Kubernetes node ip subnet (optional)
  OVPN_K8S_NODE_SUBNET: "255.255.0.0"
  # Push a `dhcp-option DOMAIN` config
  dhcpOptionDomain: true
  # Redirect all client traffic through VPN
  redirectGateway: true
  # Arbitrary lines appended to the end of the server configuration file
  # conf: |
  #  max-clients 100
  #  client-to-client
