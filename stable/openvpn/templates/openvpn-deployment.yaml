apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "openvpn.fullname" . }}
  labels:
    app: {{ template "openvpn.name" . }}
    chart: {{ template "openvpn.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
{{- if .Values.updateStrategy }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
{{- end }}
  selector:
    matchLabels:
      app: {{ template "openvpn.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "openvpn.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/config-openvpn.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/etc/openvpn/setup/configure.sh"]
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: openvpn
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        resources:
          requests:
            cpu: "{{ .Values.resources.requests.cpu }}"
            memory: "{{ .Values.resources.requests.memory }}"
          limits:
            cpu: "{{ .Values.resources.limits.cpu }}"
            memory: "{{ .Values.resources.limits.memory }}"
        volumeMounts:
          - mountPath: /etc/openvpn/setup
            name: openvpn
            readOnly: false
          - mountPath: /etc/openvpn/certs
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}
            {{- end }}
            name: certs
            readOnly: false
          - mountPath: /etc/openvpn/auth/credentials/
            name: openvpn-ldap-creds
          {{- if .Values.exporter.enabled }}
          - mountPath: /var/openvpn-status
            name: status
          {{- end }}
      {{- if .Values.exporter.enabled }}
      - name: {{ .Chart.Name }}-exporter
        image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}"
        imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
        command: ["/openvpn_exporter", "-openvpn.status_paths", "/var/openvpn-status/status.log"]
        ports:
        - containerPort: 9176
          name: metrics
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9176
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9176
        resources:
          requests:
            cpu: "{{ .Values.exporter.resources.requests.cpu }}"
            memory: "{{ .Values.exporter.resources.requests.memory }}"
          limits:
            cpu: "{{ .Values.exporter.resources.limits.cpu }}"
            memory: "{{ .Values.exporter.resources.limits.memory }}"
        volumeMounts:
          - mountPath: /var/openvpn-status
            name: status
      {{- end }}
      volumes:
      - name: openvpn
        configMap:
          name: {{ template "openvpn.fullname" . }}
          defaultMode: 0775
      - name: openvpn-ldap-creds
        secret:
          secretName: "{{ .Values.openvpn.ldap.bindCredsSecretName }}"
      - name: certs
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "openvpn.fullname" . }}{{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.exporter.enabled }}
      - name: status
        emptyDir: {}
      {{- end }}
